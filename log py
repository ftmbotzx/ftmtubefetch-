import logging
import datetime
import pytz
from pyrogram import Client
from info import LOG_CHANNEL

# Configure logging
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(levelname)s - %(message)s"
)

# Function to send logs to Telegram log channel
async def send_log_to_channel(app: Client, message: str):
    try:
        await app.send_message(LOG_CHANNEL, f"📜 **Bot Log:**\n\n{message}")
    except Exception as e:
        logging.error(f"Failed to send log to Telegram: {e}")

# Log bot startup
async def log_bot_start(app: Client, user):
    tz = pytz.timezone('Asia/Kolkata')
    now = datetime.datetime.now(tz)
    start_time = now.strftime("%Y-%m-%d %H:%M:%S %p")

    log_message = f"🚀 **Bot Started by {user.mention}**\n" \
                  f"🆔 User ID: `{user.id}`\n" \
                  f"⏰ Time: {start_time} GMT+5:30"

    logging.info(log_message)
    await send_log_to_channel(app, log_message)

# Log download requests
async def log_download_request(app: Client, user, video_url):
    log_message = f"🎬 **Download Request**\n" \
                  f"👤 User: {user.mention}\n" \
                  f"🆔 User ID: `{user.id}`\n" \
                  f"🔗 URL: {video_url}"

    logging.info(log_message)
    await send_log_to_channel(app, log_message)

# Log download completion
async def log_download_complete(app: Client, user):
    log_message = f"✅ **Download Completed**\n" \
                  f"📤 Sending video to {user.mention} (`{user.id}`)"

    logging.info(log_message)
    await send_log_to_channel(app, log_message)
